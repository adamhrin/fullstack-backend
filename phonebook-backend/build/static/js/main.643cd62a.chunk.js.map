{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","filterChangeHandler","PersonForm","onSubmit","submitHandler","newName","nameChangeHandler","newNumber","numberChangeHandler","type","Person","name","number","onClick","handleDelete","id","Persons","filteredPersons","map","person","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","notifClassName","setNotifClassName","useEffect","personsService","personsToShow","re","RegExp","match","getFilteredPersons","event","target","preventDefault","newPerson","nameArr","concat","some","indexOf","window","confirm","personToUpdate","find","p","updatedPerson","setTimeout","catch","error","console","log","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.643cd62a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => (\n  <div>\n    filter shown with\n    <input value={props.filter} onChange={props.filterChangeHandler}/>\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.submitHandler}>\n    <div>\n      name: \n      <input value={props.newName} onChange={props.nameChangeHandler}/>\n    </div>\n    <div>\n      number:\n      <input value={props.newNumber} onChange={props.numberChangeHandler}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (props) => (\n  <div>\n    <span>{props.name} {props.number}</span>\n    <button onClick={() => props.handleDelete(props.id)}>delete</button>\n  </div>\n)\n\nconst Persons = ({ filteredPersons, handleDelete }) => {\n  return filteredPersons.map(person => \n    <Person \n      key={person.id}\n      id={person.id}\n      name={person.name} \n      number={person.number}\n      handleDelete={handleDelete} />\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ notifClassName, setNotifClassName] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  // this function filters persons according to the current filter value\n  const getFilteredPersons = (filter) => {\n    const filteredPersons = persons.filter(\n      person => {\n        const re = new RegExp(filter, 'i')\n        return person.name.match(re)\n      }\n    )\n    return filteredPersons\n  }\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    // create copy of persons with new added person\n    const newPersons = persons.concat(newPerson)\n    // check for duplicates\n    const nameArr = newPersons.map(person => person.name)\n    const isDuplicate = nameArr.some((name, id) => \n      nameArr.indexOf(name) != id\n    )\n    if (isDuplicate) {\n      if (window.confirm(`${newName} is already in the phonebook, replace the old number with a new one?`)) {\n        // using the fact that name must be unique to find the id of the person to update\n        const personToUpdate = persons.find(p => p.name === newName)\n        const id = personToUpdate.id\n        personsService\n          .update(id, newPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotifClassName('success')\n            setMessage(\n              `Updated number of ${updatedPerson.name} to ${updatedPerson.number}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            console.log(error);\n            setNotifClassName('error')\n            setMessage(`Information of ${personToUpdate.name} has already been removed from server`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n    } else {\n      personsService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotifClassName('success')\n          setMessage(`Added ${returnedPerson.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const handleDelete = id => {\n    const personToDelete = persons.find(p => p.id === id)\n    const name = personToDelete.name\n    if (window.confirm(`Delete ${name}?`)) {\n      personsService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          setNotifClassName('success')\n          setMessage(`Deleted ${name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const personsToShow = getFilteredPersons(filter)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} className={notifClassName} />\n\n      <Filter filter={filter} filterChangeHandler={handleFilterChange} />\n\n      <h3>Add a new person</h3>\n\n      <PersonForm \n        submitHandler={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        nameChangeHandler={handleNameChange}\n        numberChangeHandler={handleNumberChange}\n      />\n      \n      <h3>Numbers</h3>\n\n      <Persons \n        filteredPersons={personsToShow} \n        handleDelete={handleDelete}/>\n      \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}